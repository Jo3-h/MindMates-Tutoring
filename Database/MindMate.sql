-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


ALTER TABLE IF EXISTS public.bookings DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public.bookings DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public.bookings DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public.booking_users DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public.booking_users DROP CONSTRAINT IF EXISTS None;



DROP TABLE IF EXISTS public.users;

CREATE TABLE IF NOT EXISTS public.users
(
    user_id serial NOT NULL,
    first_name character varying NOT NULL,
    last_name character varying NOT NULL,
    email character varying NOT NULL,
    phone_number character varying NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT NOW(),
    PRIMARY KEY (user_id)
);

DROP TABLE IF EXISTS public.locations;

CREATE TABLE IF NOT EXISTS public.locations
(
    location_id serial NOT NULL,
    name character varying NOT NULL,
    address text NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT NOW(),
    PRIMARY KEY (location_id)
);

DROP TABLE IF EXISTS public.bookings;

CREATE TABLE IF NOT EXISTS public.bookings
(
    booking_id serial NOT NULL,
    subject_id integer NOT NULL,
    location_id integer NOT NULL,
    user_id integer NOT NULL,
    effective_date date,
    start_time time without time zone NOT NULL,
    end_time time without time zone NOT NULL,
    max_students integer NOT NULL DEFAULT 1,
    min_students integer,
    is_recurring boolean,
    created_at timestamp without time zone NOT NULL DEFAULT NOW(),
    PRIMARY KEY (booking_id)
);

DROP TABLE IF EXISTS public.subjects;

CREATE TABLE IF NOT EXISTS public.subjects
(
    subject_id serial NOT NULL,
    name character varying NOT NULL,
    description text NOT NULL,
    PRIMARY KEY (subject_id)
);

DROP TABLE IF EXISTS public.booking_users;

CREATE TABLE IF NOT EXISTS public.booking_users
(
    booking_user_id serial NOT NULL,
    booking_id integer NOT NULL,
    user_id integer NOT NULL,
    joined_at timestamp without time zone NOT NULL DEFAULT NOW(),
    PRIMARY KEY (booking_user_id)
);

DROP TABLE IF EXISTS public.availability;

CREATE TABLE IF NOT EXISTS public.availability
(
    availability_id serial NOT NULL,
    day_of_week integer NOT NULL DEFAULT 0,
    start_time time without time zone NOT NULL DEFAULT NOW(),
    end_time time without time zone NOT NULL DEFAULT NOW(),
    effective_date date NOT NULL,
    is_recurring boolean NOT NULL,
    is_available boolean NOT NULL,
    PRIMARY KEY (availability_id)
);

ALTER TABLE IF EXISTS public.bookings
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.bookings
    ADD FOREIGN KEY (subject_id)
    REFERENCES public.subjects (subject_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.bookings
    ADD FOREIGN KEY (location_id)
    REFERENCES public.locations (location_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.booking_users
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.booking_users
    ADD FOREIGN KEY (booking_id)
    REFERENCES public.bookings (booking_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;